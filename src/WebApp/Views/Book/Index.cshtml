@model WebApp.Models.Book.ListBookViewModel
@addTagHelper *, WebApp
@{
    ViewBag.Title = "Books";
}

<form method="get">
    <label asp-for="SortString">Sort by</label>
    <select name="sortString" asp-items="Model.ListSort" asp-for="SortString"></select>
    <label asp-for="StringGenre">Genre</label>
    <select name="stringGenre" asp-items="Model.ListGenres" asp-for="StringGenre"></select>
    <label asp-for="SearchFor">Search by</label>
    <select name="searchFor" asp-items="Model.ListSearch" asp-for="SearchFor"></select>
    <label asp-for="NameSearch">Search</label>
    <input type="text" name="nameSearch" asp-for="NameSearch" />
    <input  class="btn btn-sm btn-primary" type="submit" value="Apply" />
    <a class="btn btn-sm btn-danger" asp-action="Index">Refresh</a>
    @if (User.IsInRole("admin") || User.IsInRole("employee"))
    {
        <label asp-for="IsDisplay">IsDisplay</label>
        <input type="checkbox" name="isDisplay" asp-for="IsDisplay" />
        <a class="btn btn-sm btn-success" asp-action="Add"  
           asp-route-sortString="@Model.SortString"
           asp-route-stringGenre="@Model.StringGenre"
           asp-route-searchFor="@Model.SearchFor"
           asp-route-nameSearch="@Model.NameSearch"
           asp-route-isDisplay="@Model.IsDisplay">Add book</a>
    }
</form>

<div class="row mt-5 mb-2">
    @{
        foreach (WebApp.Models.Book.BookViewModel book in Model.Books)
        {
            @await Html.PartialAsync("_BooksList", book, new ViewDataDictionary(this.ViewData) {
           { "SortString", Model.SortString },
           { "StringGenre", Model.StringGenre },
           { "SearchFor", Model.SearchFor },
           { "NameSearch", Model.NameSearch },
           { "IsDisplay", Model.IsDisplay }
        }) } }
</div>

<div class="mt-5 mb-5" style="margin-left: 45%;">
    <page-link list-book-view-model="Model" page-action="Index"></page-link>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index" style="margin-left: -15%; margin-top: -100px;"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-sortString="@Model.SortString"
           asp-route-stringGenre="@Model.StringGenre"
           asp-route-searchFor="@Model.SearchFor"
           asp-route-nameSearch="@Model.NameSearch"
           asp-route-isDisplay="@Model.IsDisplay"
           class="btn btn-outline-dark">
            <i class="glyphicon glyphicon-chevron-left"></i>
            Back
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index" style="margin-left: 27%; margin-top: -100px;"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-sortString="@Model.SortString"
           asp-route-stringGenre="@Model.StringGenre"
           asp-route-searchFor="@Model.SearchFor"
           asp-route-nameSearch="@Model.NameSearch"
           asp-route-isDisplay="@Model.IsDisplay"
           class="btn btn-outline-dark">
            Next
            <i class="glyphicon glyphicon-chevron-right"></i>
        </a>
    }
</div>
